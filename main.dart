import 'dart:io';             // ูุฅุฏุฎุงู ูุฅุฎุฑุงุฌ ุงูุจูุงูุงุช ูู ูุฅูู ุงููุณุชุฎุฏู (stdin, stdout)
import 'dart:math';           // ูุชูููุฏ ุฃุฑูุงู ุนุดูุงุฆูุฉ

// ุชุนุฑูู ููุงุณ ุงููุนุจุฉ
class TicTacToe {
  List<String> board = List.filled(9, ' '); // ูุตูููุฉ ุชูุซู ุงูููุญุฉุ ุจูุง 9 ุฎูุงูุง ูุงุฑุบุฉ
  String humanPlayer = 'X';     // ุญุฑู ุงููุงุนุจ ุงูุจุดุฑูุ ูุชู ุชุญุฏูุฏู ูุงุญููุง
  String computerPlayer = 'O';  // ุญุฑู ุงูููุจููุชุฑ (ุงูุนูุณ ูู ุงููุงุนุจ)
  String currentPlayer = 'X';   // ูู ูุจุฏุฃ ุฃูููุง (X ุฏุงุฆููุง)
  bool gameOver = false;        // ุญุงูุฉ ุงูุชูุงุก ุงููุนุจุฉ
  bool vsComputer = false;      // ูู ููุนุจ ุถุฏ ุงูููุจููุชุฑ ุฃู ูุงุนุจ ุจุดุฑู ุขุฎุฑ
  final Random random = Random(); // ูููุฏ ุฃุฑูุงู ุนุดูุงุฆูุฉ ููููุจููุชุฑ

  // ุจุฏุก ุงููุนุจุฉ
  void start() {
    print('๐ฎ Welcome to Tic Tac Toe!'); // ุชุฑุญูุจ ุจุงููุงุนุจ

    // ุณุคุงู ุงููุณุชุฎุฏู: ูู ุชุฑูุฏ ุงููุนุจ ุถุฏ ุงูููุจููุชุฑุ
    while (true) {
      stdout.write('Do you want to play against the computer? (y/n): ');
      String? choice = stdin.readLineSync();

      if (choice == null) continue;

      choice = choice.toLowerCase().trim();

      if (choice == 'y') {
        vsComputer = true;  // ุงููุนุจ ุถุฏ ุงูููุจููุชุฑ
        break;
      } else if (choice == 'n') {
        vsComputer = false; // ุงููุนุจ ุถุฏ ูุงุนุจ ุขุฎุฑ
        break;
      } else {
        print('โ Please enter only y or n.'); // ุฑุณุงูุฉ ุฎุทุฃ ุนูุฏ ุฅุฏุฎุงู ุฎุงุทุฆ
      }
    }

    // ุงุฎุชูุงุฑ ุงูุฑูุฒ (X ุฃู O)
    while (true) {
      stdout.write('Choose your symbol (X or O): ');
      String? symbol = stdin.readLineSync();

      if (symbol == null) continue;

      symbol = symbol.toUpperCase().trim();

      if (symbol == 'X' || symbol == 'O') {
        humanPlayer = symbol;
        computerPlayer = symbol == 'X' ? 'O' : 'X'; // ุงูููุจููุชุฑ ูุฃุฎุฐ ุงูุญุฑู ุงูุขุฎุฑ
        currentPlayer = 'X'; // ุฏุงุฆููุง ูุจุฏุฃ ุจู X
        break;
      } else {
        print('โ Please enter only X or O.'); // ุชูุจูู ุนูุฏ ุฅุฏุฎุงู ุฎุงุทุฆ
      }
    }

    // ุญููุฉ ูุชูุฑุงุฑ ุงููุนุจ ูู ุญุงู ุฃุฑุงุฏ ุงููุงุนุจ ุฐูู
    do {
      board = List.filled(9, ' ');  // ุฅุนุงุฏุฉ ุชุนููู ุงูููุญุฉ
      gameOver = false;             // ุฅุนุงุฏุฉ ุชุนููู ุญุงูุฉ ุงูููุงูุฉ
      currentPlayer = 'X';          // ุฅุนุงุฏุฉ ุชุนููู ุงูุฏูุฑ
      playGame();                   // ุชุดุบูู ุงููุนุจุฉ

      stdout.write('Do you want to play again? (y/n): '); // ุฅุนุงุฏุฉ ุงููุนุจุฉุ
    } while ((stdin.readLineSync() ?? '').toLowerCase().trim() == 'y');

    print('๐ Thanks for playing!'); // ุดูุฑูุง ุนูู ุงููุนุจ
  }

  // ููุทู ุงููุนุจุฉ ุงููุงูู
  void playGame() {
    printInstructions(); // ุทุจุงุนุฉ ุงูุชุนูููุงุช ูุน ุฃุฑูุงู ุงูุฎุงูุงุช

    while (!gameOver) {
      printBoard(); // ุทุจุงุนุฉ ุงูุญุงูุฉ ุงูุญุงููุฉ ูููุญุฉ

      if (vsComputer) {
        if (currentPlayer == humanPlayer) {
          playerMove(); // ุฏูุฑ ุงููุงุนุจ
        } else {
          botMove();    // ุฏูุฑ ุงูููุจููุชุฑ
        }
      } else {
        playerMove(); // ููุง ุงููุงุนุจูู ุจุดุฑ
      }

      // ุงูุชุญูู ูู ูุฌูุฏ ูุงุฆุฒ ุฃู ุชุนุงุฏู
      if (checkWinner(currentPlayer)) {
        printBoard(); // ุทุจุงุนุฉ ุงูููุญุฉ ุงูููุงุฆูุฉ
        print('๐ Player $currentPlayer wins!'); // ุทุจุงุนุฉ ุงููุงุฆุฒ
        gameOver = true; // ุฅููุงุก ุงููุนุจุฉ
      } else if (!board.contains(' ')) {
        printBoard(); // ุทุจุงุนุฉ ุงูููุญุฉ ุงูููุงุฆูุฉ
        print('๐ค It\'s a draw!'); // ุชุนุงุฏู
        gameOver = true;
      } else {
        // ุชุจุฏูู ุงูุฏูุฑ ุจูู X ู O
        currentPlayer = currentPlayer == 'X' ? 'O' : 'X';
      }
    }
  }

  // ุทุจุงุนุฉ ุฃุฑูุงู ุงููุฑุจุนุงุช
  void printInstructions() {
    print('The board positions are numbered from 0 to 8:');
    print('''
     0 | 1 | 2
    ---+---+---
     3 | 4 | 5
    ---+---+---
     6 | 7 | 8
    ''');
  }

  // ุทุจุงุนุฉ ุงูููุญุฉ ุงูุญุงููุฉ
  void printBoard() {
    print('''
     ${board[0]} | ${board[1]} | ${board[2]} 
    ---+---+---
     ${board[3]} | ${board[4]} | ${board[5]} 
    ---+---+---
     ${board[6]} | ${board[7]} | ${board[8]} 
    ''');
  }

  // ุชุญุฑูู ุงููุงุนุจ (ุฅุฏุฎุงู ูุฏูู)
  void playerMove() {
    int? move;

    do {
      stdout.write('โฌ๏ธ Player $currentPlayer, choose a cell (0-8): ');
      move = int.tryParse(stdin.readLineSync() ?? ''); // ูุฑุงุกุฉ ุงูุฑูู

      // ุงูุชุญูู ูู ุตุญุฉ ุงูุฑูู ููู ุฃู ุงูุฎููุฉ ูุงุฑุบุฉ
      if (move == null || move < 0 || move > 8 || board[move] != ' ') {
        print('โ Invalid move or cell already taken.');
        move = null;
      }
    } while (move == null); // ุงูุชูุฑุงุฑ ุญุชู ุฅุฏุฎุงู ุตุงูุญ

    board[move] = currentPlayer; // ุชุญุฏูุซ ุงูุฎููุฉ
  }

  // ุญุฑูุฉ ุงูููุจููุชุฑ (ุนุดูุงุฆูุฉ)
  void botMove() {
    print('๐ค Computer is making a move...');
    sleep(Duration(milliseconds: 800)); // ุชุฃุฎูุฑ ุจุณูุท ููุญุงูุงุฉ ุงูุชูููุฑ

    // ุฌูุน ูู ุงูุฎุงูุงุช ุงููุงุฑุบุฉ
    List<int> empty = [];
    for (int i = 0; i < 9; i++) {
      if (board[i] == ' ') empty.add(i);
    }

    // ุงุฎุชูุงุฑ ุฎุงูุฉ ุนุดูุงุฆูุฉ ูู ุงููุงุฑุบุงุช
    int move = empty[random.nextInt(empty.length)];
    board[move] = currentPlayer; // ูุถุน ุงูุญุฑูุฉ
  }

  // ุงูุชุญูู ูู ุงูููุฒ
  bool checkWinner(String p) {
    // ูู ุงุญุชูุงูุงุช ุงูููุฒ (ุตููู + ุฃุนูุฏุฉ + ุฃูุทุงุฑ)
    List<List<int>> win = [
      [0, 1, 2], [3, 4, 5], [6, 7, 8], // ุตููู
      [0, 3, 6], [1, 4, 7], [2, 5, 8], // ุฃุนูุฏุฉ
      [0, 4, 8], [2, 4, 6],            // ุฃูุทุงุฑ
    ];
    
    // ุฅุฐุง ุชุญููุช ุฃู ูุฌููุนุฉ ููุฒ ูุฑุฌุน true
    return win.any((line) =>
      board[line[0]] == p &&
      board[line[1]] == p &&
      board[line[2]] == p
    );
  }
}

// ููุทุฉ ุงูุจุฏุก ูู ุงูุจุฑูุงูุฌ
void main() {
  TicTacToe game = TicTacToe(); // ุฅูุดุงุก ูุงุฆู ุงููุนุจุฉ
  game.start();                 // ุจุฏุก ุงููุนุจุฉ
}
